
// MFCRaiden.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "MFCRaiden.h"
#include "MainFrm.h"

#include "MFCRaidenDoc.h"
#include "MFCRaidenView.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CMFCRaidenApp

BEGIN_MESSAGE_MAP(CMFCRaidenApp, CWinApp)
	ON_COMMAND(ID_APP_ABOUT, &CMFCRaidenApp::OnAppAbout)
	// 基于文件的标准文档命令
	ON_COMMAND(ID_FILE_NEW, &CWinApp::OnFileNew)
	ON_COMMAND(ID_FILE_OPEN, &CWinApp::OnFileOpen)
END_MESSAGE_MAP()


// CMFCRaidenApp 构造

CMFCRaidenApp::CMFCRaidenApp()
{
	// 支持重新启动管理器
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_ALL_ASPECTS;
#ifdef _MANAGED
	// 如果应用程序是利用公共语言运行时支持(/clr)构建的，则: 
	//     1) 必须有此附加设置，“重新启动管理器”支持才能正常工作。
	//     2) 在您的项目中，您必须按照生成顺序向 System.Windows.Forms 添加引用。
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: 将以下应用程序 ID 字符串替换为唯一的 ID 字符串；建议的字符串格式
	//为 CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID(_T("MFCRaiden.AppID.NoVersion"));

	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}

// 唯一的一个 CMFCRaidenApp 对象

CMFCRaidenApp theApp;


// CMFCRaidenApp 初始化

BOOL CMFCRaidenApp::InitInstance()
{
	// 如果一个运行在 Windows XP 上的应用程序清单指定要
	// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，
	//则需要 InitCommonControlsEx()。  否则，将无法创建窗口。
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 将它设置为包括所有要在应用程序中使用的
	// 公共控件类。
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	// 初始化 OLE 库
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction(FALSE);

	// 使用 RichEdit 控件需要 AfxInitRichEdit2()	
	// AfxInitRichEdit2();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("应用程序向导生成的本地应用程序"));
	LoadStdProfileSettings(4);  // 加载标准 INI 文件选项(包括 MRU)


	// 注册应用程序的文档模板。  文档模板
	// 将用作文档、框架窗口和视图之间的连接
	CSingleDocTemplate* pDocTemplate;
	pDocTemplate = new CSingleDocTemplate(
		IDR_MAINFRAME,
		RUNTIME_CLASS(CMFCRaidenDoc),
		RUNTIME_CLASS(CMainFrame),       // 主 SDI 框架窗口
		RUNTIME_CLASS(CMFCRaidenView));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);


	// 分析标准 shell 命令、DDE、打开文件操作的命令行
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);



	// 调度在命令行中指定的命令。  如果
	// 用 /RegServer、/Register、/Unregserver 或 /Unregister 启动应用程序，则返回 FALSE。
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;
	m_pMainWnd->SetWindowTextW(L"Raiden _by zyc");
	// 唯一的一个窗口已初始化，因此显示它并对其进行更新
	m_pMainWnd->ShowWindow(SW_SHOW);
	m_pMainWnd->UpdateWindow();
	return TRUE;
}

int CMFCRaidenApp::ExitInstance()
{
	//TODO: 处理可能已添加的附加资源
	AfxOleTerm(FALSE);

	return CWinApp::ExitInstance();
}

// CMFCRaidenApp 消息处理程序


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_ABOUTBOX };
#endif

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// 用于运行对话框的应用程序命令
void CMFCRaidenApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

Craft::Craft() {
	pos_x = 100;
	pos_y = 100;
	Hp = INI_HP;
}
Craft::Craft(int x, int y)
{
	pos_x = x;
	pos_y = y;
	//rect.SetRect(x, y, x + img.GetWidth(), y + img.GetWidth());
	speed = ENEMY_SPEED;
}

Craft::~Craft()
{
}


PlayerCraft::PlayerCraft(int x, int y) : Craft(x, y)
{
	Hp = INI_PLAYER_HP;
	//score = 0;
	bomb = BOMB_NUM;
}
PlayerCraft::PlayerCraft() :Craft() {
	Hp = INI_PLAYER_HP;
	//score = 0;
	bomb = BOMB_NUM;
}

PlayerCraft::~PlayerCraft()
{
}
EnemyCraft::EnemyCraft() {
}
EnemyCraft::EnemyCraft(int x, int y) :Craft(x, y) {
	Hp = INI_ENEMY_HP;
	speedx = ENEMY_SPEED;
	speedy = 0;
	enemyType = 0;
}

Boss::Boss(int x, int y) {
	Hp = INI_BOSS_HP;
	speedx = 0;
	speedy = 10;
	//rect.SetRect(x, y, x+bossImg.GetWidth(),);
	enemyType = 100;
	isEngaged = false;
}

bool Craft::Move(int dx, int dy) {
	pos_x += dx;
	pos_y += dy;
	rect.left += dy;
	rect.right += dy;
	rect.bottom += dx;
	rect.top += dx;
	return true;
}
int Craft::getX() {
	return rect.top;
}
int Craft::getY() {
	return rect.left;
}
int Craft::getspeed() {
	return speed;
}

Bullets::Bullets() {
	//sizex = img.GetWidth();
	//sizey = img.GetHeight();
}
void Bullets::addbullet(int x, int y, int sx, int sy) {
	BULLET b;
	b.posx = x;
	b.posy = y;
 	b.rect.SetRect(y, x, y + img.GetWidth(), x + img.GetHeight());
	b.speedx = sx;
	b.speedy = sy;
	b.lifetime = 0;
	maga.push_back(b);
}
void Bullets::update() {
	list<BULLET>::iterator it;
	for (it = maga.begin(); it != maga.end(); it++)
	{
		it->posx -= it->speedx;
		it->posy -= it->speedy;
	}
	maga.remove_if([](BULLET n) {return n.lifetime >= BULLIFE; });
}
// CMFCRaidenApp 消息处理程序



